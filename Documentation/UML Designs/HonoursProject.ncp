<Project>
  <Name>HonoursProject</Name>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Security Library</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IEncryptionService</Name>
        <Access>Public</Access>
        <Location left="685" top="571" />
        <Size width="248" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">Data EncryptData(string key, Data data)</Member>
        <Member type="Method">Data DecryptData(string key, Data data)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>IKeyExchangeService</Name>
        <Access>Public</Access>
        <Location left="1326" top="571" />
        <Size width="386" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">int GenerateIntermediateKey(int common_secret, int private_secret)</Member>
        <Member type="Method">int GenerateFinalKey(int swapped_secret, int private_secret)</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ISignatureService</Name>
        <Access>Public</Access>
        <Location left="1758" top="571" />
        <Size width="451" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string SignData(string data, string private_key)</Member>
        <Member type="Method">bool CheckSignature(string signed_data, string public_key, string check_hash)</Member>
      </Entity>
      <Entity type="Structure">
        <Name>Data</Name>
        <Access>Public</Access>
        <Location left="550" top="284" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public char data_pointer</Member>
        <Member type="Field">public int byte_count</Member>
      </Entity>
      <Entity type="Interface">
        <Name>ISecurityServiceFactory</Name>
        <Access>Public</Access>
        <Location left="629" top="992" />
        <Size width="361" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">IEncryptionService MakeEncryptionService(string method)</Member>
        <Member type="Method">IKeyExchangeService MakeKeyExchangeService(string method)</Member>
        <Member type="Method">ISignatureService MakeSignatureService(string method)</Member>
        <Member type="Method">IHashingService MakeHashingService(string method)</Member>
        <Member type="Method">ISymmetricKeyGenerationService MakeKeyGenerationService(string method)</Member>
      </Entity>
      <Entity type="Class">
        <Name>SecurityServiceFactory</Name>
        <Access>Public</Access>
        <Location left="629" top="1266" />
        <Size width="361" height="234" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public IEncryptionService MakeEncryptionService(string method)</Member>
        <Member type="Method">public IKeyExchangeService MakeKeyExchangeService(string method)</Member>
        <Member type="Method">public ISignatureService MakeSignatureService(string method)</Member>
        <Member type="Method">public IHashingService MakeHashingService(string method)</Member>
        <Member type="Method">public ISymmetricKeyGenerationService MakeKeyGenerationService(string method)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IHashingService</Name>
        <Access>Public</Access>
        <Location left="2255" top="571" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">string Hash(string data)</Member>
      </Entity>
      <Entity type="Class">
        <Name>AesEncryptionService</Name>
        <Access>Public</Access>
        <Location left="736" top="284" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public Data EncryptData(string key, Data data)</Member>
        <Member type="Method">public Data DecryptData(string key, Data data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Service will implement IEncryptionService based on the AES library.</Text>
        <Location left="940" top="350" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>DiffieHelmanKeyExchangeService</Name>
        <Access>Public</Access>
        <Location left="1326" top="284" />
        <Size width="382" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public int GenerateIntermediateKey(int common_secret, int private_secret)</Member>
        <Member type="Method">public int GenerateFinalKey(int swapped_secret, int private_secret)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>DHKeyExchangeService will implement Key Exchange using the diffie helman protocol.</Text>
        <Location left="1139" top="350" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>SHA3HashingService</Name>
        <Access>Public</Access>
        <Location left="2258" top="303" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public string Hash(string data)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>SignatureService</Name>
        <Access>Public</Access>
        <Location left="1905" top="303" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public string SignData(string data, string private_key)</Member>
        <Member type="Method">public bool CheckSignature(string signed_data, string public_key, string check_hash)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Comment">
        <Text>Factory enables easy instanciation of services. This means that when a new method is added only the security library needs to be updated and recompiled. 
This should make it easier to roll out new versions of the code.</Text>
        <Location left="1067" top="992" />
        <Size width="160" height="223" />
      </Entity>
      <Entity type="Class">
        <Name>SecurityService</Name>
        <Access>Public</Access>
        <Location left="1326" top="992" />
        <Size width="382" height="436" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public readonly IEncryptionService encryption_service</Member>
        <Member type="Field">public readonly IKeyExchangeService key_exchange_service</Member>
        <Member type="Field">public readonly ISignatureService signature_service</Member>
        <Member type="Field">public readonly IHashingService hashing_service</Member>
        <Member type="Field">public readonly ISymmetricKeyGenerationService symmetric_key_generation_service</Member>
        <Member type="Constructor">public SecurityService(SecurityConfiguration config)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>ISymmetricKeyGenerationService</Name>
        <Access>Public</Access>
        <Location left="2481" top="571" />
        <Size width="381" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void GenerateKeys(out string private_key, out string public_key)</Member>
      </Entity>
      <Entity type="Class">
        <Name>ElipticCurveKeyGenerationService</Name>
        <Access>Public</Access>
        <Location left="2506" top="303" />
        <Size width="328" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void GenerateKeys(out string private_key, out string public_key)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>SecurityConfiguration</Name>
        <Access>Public</Access>
        <Location left="1853" top="992" />
        <Size width="289" height="306" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string EncryptionMethod { get; }</Member>
        <Member type="Property">public string KeyExchangeMethod { get; }</Member>
        <Member type="Property">public string SignatureMethod { get; }</Member>
        <Member type="Property">public string HashingMethod { get; }</Member>
        <Member type="Property">public string SymmetricKeyGenerationMethod { get; }</Member>
      </Entity>
      <Entity type="Comment">
        <Text>Struct created from security configuration file.</Text>
        <Location left="2184" top="992" />
        <Size width="160" height="75" />
      </Entity>
      <Entity type="Class">
        <Name>ConfigurationGenerator</Name>
        <Access>Public</Access>
        <Location left="2390" top="992" />
        <Size width="393" height="308" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public SecurityConfiguration GenerateConfigFromFile(string filepath)</Member>
        <Member type="Method">public SecurityConfiguration GenerateDefaultConfig()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Interface">
        <Name>IFileIO</Name>
        <Access>Public</Access>
        <Location left="1798" top="1499" />
        <Size width="381" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">SecurityConfiguration ReadConfiguration(string filepath)</Member>
        <Member type="Method">void WriteConfiguration(SecurityConfiguration config, string filepath)</Member>
      </Entity>
      <Entity type="Class">
        <Name>XMLFileIO</Name>
        <Access>Public</Access>
        <Location left="2390" top="1499" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public SecurityConfiguration ReadConfiguration(string filepath)</Member>
        <Member type="Method">public void WriteConfiguration(SecurityConfiguration config, string filepath)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="5" second="4">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="7" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="9" second="1">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="11" second="6">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="12" second="2">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="0">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="14" second="1">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="14" second="2">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Association" first="14" second="6">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="16" second="15">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Association" first="14" second="15">
        <Label>
        </Label>
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Composition</AssociationType>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
      <Relationship type="Realization" first="21" second="20">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Command and Control Server</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>CommandServer</Name>
        <Access>Public</Access>
        <Location left="13" top="10" />
        <Size width="308" height="402" />
        <Collapsed>False</Collapsed>
        <Member type="Constructor">public CommandServer()</Member>
        <Member type="Method">public bool IsRunnig()</Member>
        <Member type="Method">public void StopServer()</Member>
        <Member type="Method">public void HandleClientConnection(int socket)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>TcpServer</Name>
        <Access>Public</Access>
        <Location left="340" top="10" />
        <Size width="308" height="402" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int listening_socket</Member>
        <Member type="Constructor">public TcpServer()</Member>
        <Member type="Destructor">~TcpServer()</Member>
        <Member type="Method">public int Listen()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Device Driver</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>DeviceDriver</Name>
        <Access>Public</Access>
        <Location left="32" top="26" />
        <Size width="334" height="324" />
        <Collapsed>False</Collapsed>
        <Member type="Field">int _socket_id</Member>
        <Member type="Field">SecurityService _sec_service</Member>
        <Member type="Field">Queue&lt;String&gt; _message_queue</Member>
        <Member type="Field">String _key</Member>
        <Member type="Field">String _name</Member>
        <Member type="Method">void HandleIncoming()</Member>
        <Member type="Method">void SendQueue()</Member>
        <Member type="Method">void Listen()</Member>
        <Member type="Method">public void StartClient()</Member>
        <Member type="Method">public void IsRunning()</Member>
        <Member type="Method">public void Stop()</Member>
        <Member type="Constructor">public DeviceDriver()</Member>
        <Member type="Method">public void SendStatusUpdates()</Member>
        <Member type="Method">public void RunWorkload()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Public Information Registrar</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>PublicInformationRegistrar</Name>
        <Access>Public</Access>
        <Location left="10" top="22" />
        <Size width="259" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">RegistryRecord[] records</Member>
        <Member type="Method">public void InitialiseServer()</Member>
        <Member type="Method">public void Listen()</Member>
        <Member type="Method">public void HandleRequest()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>RegistryRecord</Name>
        <Access>Public</Access>
        <Location left="319" top="22" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string public_key</Member>
        <Member type="Field">public string ip_address</Member>
        <Member type="Field">public Role role</Member>
        <Member type="Field">public string friendly_name</Member>
      </Entity>
      <Entity type="Enum">
        <Name>Role</Name>
        <Access>Public</Access>
        <Location left="531" top="22" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Value>Server</Value>
        <Value>Device</Value>
        <Value>Client</Value>
        <Value>Unknown</Value>
      </Entity>
    </Entities>
    <Relationships />
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Client</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Class">
        <Name>APIHandler</Name>
        <Access>Public</Access>
        <Location left="348" top="271" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">public void MakeRequest()</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>DataStore</Name>
        <Access>Public</Access>
        <Location left="52" top="271" />
        <Size width="236" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public DeviceData[] Devices { get; set; }</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Structure">
        <Name>DeviceData</Name>
        <Access>Public</Access>
        <Location left="558" top="22" />
        <Size width="285" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string DeviceName { get; set; }</Member>
        <Member type="Property">public string DeviceWorkloadName { get; set; }</Member>
        <Member type="Property">public DataPoint[] Data { get; set; }</Member>
        <Member type="Property">public InputDataPoint[] InputPoints { get; set; }</Member>
        <Member type="Property">public string Status { get; set; }</Member>
      </Entity>
      <Entity type="Structure">
        <Name>DataPoint</Name>
        <Access>Public</Access>
        <Location left="334" top="22" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string DataName { get; set; }</Member>
        <Member type="Property">public string Value { get; set; }</Member>
      </Entity>
      <Entity type="Structure">
        <Name>InputDataPoint</Name>
        <Access>Public</Access>
        <Location left="52" top="22" />
        <Size width="236" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Property">public string InputName { get; set; }</Member>
        <Member type="Property">public string Type { get; set; }</Member>
      </Entity>
      <Entity type="Class">
        <Name>GraphicsHandler</Name>
        <Access>Public</Access>
        <Location left="52" top="531" />
        <Size width="162" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">DataStore devices</Member>
        <Member type="Method">public void Display()</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Association" first="5" second="1">
        <StartOrientation>Horizontal</StartOrientation>
        <EndOrientation>Horizontal</EndOrientation>
        <Direction>Unidirectional</Direction>
        <AssociationType>Aggregation</AssociationType>
        <StartMultiplicity>1</StartMultiplicity>
        <EndMultiplicity>1</EndMultiplicity>
      </Relationship>
    </Relationships>
  </ProjectItem>
  <ProjectItem type="NClass.DiagramEditor.ClassDiagram.Diagram" assembly="NClass.DiagramEditor, Version=2.4.1823.0, Culture=neutral, PublicKeyToken=null">
    <Name>Message Library</Name>
    <Language>CSharp</Language>
    <Entities>
      <Entity type="Interface">
        <Name>IMessage</Name>
        <Access>Public</Access>
        <Location left="654" top="457" />
        <Size width="340" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Method">void Pack(char buffer)</Member>
        <Member type="Property">int messageId { get; set; }</Member>
        <Member type="Method">void Unpack(char buffer)</Member>
        <Member type="Method">static int InsertInt(int number, char buffer, int buffer)</Member>
        <Member type="Method">static int InsertString(string data, char buffer, int index)</Member>
        <Member type="Method">static int RetrieveInt(int result, char buffer, int index)</Member>
        <Member type="Method">static int RetrieveString(string result, char buffer, int index)</Member>
      </Entity>
      <Entity type="Class">
        <Name>EncryptedMessage</Name>
        <Access>Public</Access>
        <Location left="27" top="19" />
        <Size width="372" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string message</Member>
        <Member type="Field">public string name</Member>
        <Member type="Method">public void Pack(char buffer)</Member>
        <Member type="Constructor">public EncryptedMessage()</Member>
        <Member type="Constructor">public EncryptedMessage(string message, string name)</Member>
        <Member type="Property">public int messageId { get; set; }</Member>
        <Member type="Method">public void Unpack(char buffer)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>RequestMessage</Name>
        <Access>Public</Access>
        <Location left="429" top="19" />
        <Size width="372" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string request</Member>
        <Member type="Field">public string name</Member>
        <Member type="Method">public void Pack(char buffer)</Member>
        <Member type="Constructor">public RequestMessage()</Member>
        <Member type="Constructor">public RequestMessage(string request_string, string name)</Member>
        <Member type="Property">public int messageId { get; set; }</Member>
        <Member type="Method">public void Unpack(char buffer)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>ResponseMessage</Name>
        <Access>Public</Access>
        <Location left="833" top="19" />
        <Size width="372" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string request_sent</Member>
        <Member type="Field">public string response</Member>
        <Member type="Method">public void Pack(char buffer)</Member>
        <Member type="Constructor">public ResponseMessage()</Member>
        <Member type="Constructor">public ResponseMessage(string request_string, string response)</Member>
        <Member type="Property">public int messageId { get; set; }</Member>
        <Member type="Method">public void Unpack(char buffer)</Member>
        <Modifier>None</Modifier>
      </Entity>
      <Entity type="Class">
        <Name>StartTransMessage</Name>
        <Access>Public</Access>
        <Location left="1243" top="19" />
        <Size width="372" height="216" />
        <Collapsed>False</Collapsed>
        <Member type="Field">public string name</Member>
        <Member type="Method">public void Pack(char buffer)</Member>
        <Member type="Constructor">public StartTransMessage()</Member>
        <Member type="Constructor">public StartTransMessage(string name)</Member>
        <Member type="Property">public int messageId { get; set; }</Member>
        <Member type="Method">public void Unpack(char buffer)</Member>
        <Modifier>None</Modifier>
      </Entity>
    </Entities>
    <Relationships>
      <Relationship type="Realization" first="1" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="2" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="3" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
      <Relationship type="Realization" first="4" second="0">
        <StartOrientation>Vertical</StartOrientation>
        <EndOrientation>Vertical</EndOrientation>
      </Relationship>
    </Relationships>
  </ProjectItem>
</Project>